CSS - Cascading Style Sheets

 *{ } /*seleciona todos as tags que estão vinculadas com o arquivo*/
  .tag{ } /* seleciona uma classe que foi add a alguma tag do hatml ex.: <p class = "tag"></p>*/     
     #aprovados{}   /* seleciona um id que foi add a alguma tag do hatml ex.: <p id = "tag"></p>*/     
      #aninhado > div{} /**/
      p + ul  {} /**/
     p ~ ol  {} /**/
     [feira = ola rubens ]{} /* seleciona um tag que foi criada o obedecendo exatamente o parametro que foi passado que foi add a alguma tag do hatml ex.: <p tag = "ola rubens"></p>*/   
     [feira]{} /* seleciona um tag que foi criada que foi add a alguma tag do hatml ex.: <p tag = "ola rubens"></p>*/     
     [feira ~= escritorio]{} /**/
     [feira *= sa]{} /**/
	  section > :nth-child(add){} /*da para combinar sertos seletores */
	  selector:pseudo-class {}/* Uma pseudo-classe em CSS é uma palavra-chave adicionada aos seletores que especifica um estado especial do elemento a 
	                          ser selecionado. Por exemplo  :hover, aplicará um estilo quando o usuário passar o mouse sobre o elemento especificado pelo 
							  seletor.*/
           color: #ff0; 
           background-color: #f77;
       }
	   
	   
	   Lista de pseudo-classes /* lsta de pseudo classes*/
:link
:visited
:active : clique do mouse
:hover
:focus
:first-child
:last-child
:nth-child    :  esclohe a posição do filho ex  :nth-child(3) ///escolhe o 3° item
:nth-last-child
:nth-of-type
:first-of-type
:last-of-type
:empty
:target
:checked
:enabled
:disabled




especifidade



        /* https://developer.mozilla.org/pt-BR/docs/Web/CSS/Specificity */


        /*
        1 regras com !important
        2 seletores especificos
        3 ultima regra processada no caso de empate

        */
    /* 1   p{
            background-color: #333333;
        }
      2  .observacao{
            background-color: #f50a31;
        }

       3 p.observacao{
            background-color: yellow;
        }*/


       /* https://specificity.keegan.st/
        calculadora de especividade*/
    /*
        1 Imline    /// nas tags hatms  <p style: "color: black"></p>
        2 ID
        3 Classe , pseudo-Classe , atributo
        4 Elemento , Pseudo elemento
    */

==================================================================================================================================================================================================================================================================
box model


____________________________________
|              margin
|     ______________________________
|	  |        border                
|     |    _________________________
|	  |   |    padding
|     |   |    _____________________
|     |   |   |elemento
|     |   |   |_____________________
|	  |	  |
|     |   |



			
			
			segue nesta ordem os elemanto de uma box-model
			
	
	
				   top
				   cima
	left  		   _|_		right
	esquerda		|		direita
				  bottom
				  baixo
				  
				  


ex  de oreintações

 padding: 10px;                    coloca nos 4 lados eu uma vez o memso valor
 padding: 10px 10 px;              o primeiro parameto representa (cima e embaixo) e o segundo (esquerda e direita)
 padding: 10px 10 px 10px 10 px;   representa cada lado (cima , direita , embaixo , esquerda)
 
 
 ==================================================================================================================================================================================================================================================================
 
   div ,span ,  li {
            width: 50%;
            width: 200px;
            height: 80px;
            padding-top: 30px;
            text-align: center;
            /*display: block;*/ /* cadas elemento tem a propria linha */
            /*          display: inline;*/ /* coloca um do lado do outo não obedece autura e largura  width: 200px; height: 80px; */
            display: none;
            display: inline-block;

        }
		
	
	


box size

box-size : contex-box /*ermite que elemento ultrapasse o elemento pai acaba estrapolando por causa do padding masi a margim e a border*/

box-size : border-box  /* obriga os elementos obedecerem a borda em relação ao tamanho */

*{
box-size : border-box /* como esse parametro não passa por heraça. e necessario coloca-lo para gerar em todos os elemento atravez do *{} */
}


overflow

/* não deixa os elemen passarem da borda quando forem maiores que a borda do elemento que ele esta contido */
{
overflow : hidem /* não deixa passar da borda */
overflow: scroll /* se foe maior que a borda ira mostras as barras de rolagem */
}

float : flutuar
float: left flutuar a esquerda




/*
 flex-box
 css-grid
 */	
		
 
 ============================================================================================================================================================================================
 cores 
    https://www.w3schools.com/colors/colors_hsl.asp
            
            https://coolors.co/
            http://paletton.com/
			
			
tipo de cores:

body{
            background-color: purple; /*nome da cor*/
            background-color: #0000bb; /*hexadecimais com 3 pares numeros*/
            background-color: #acb ; /* == #aaccbb*/
            background-color: #0000bb80; /*hexadecimais com 3 pares numeros e um par  de nimero com a transparencia*/
            background-color: rgb(55 ,22,66); /*função rgb*/
            background-color: rgba(55 ,22,106 , 1); /*função rgba*/
            background-color: hsl(299 ,58% , 50%); /*hsl*/
            background-color: hsla(230 , 60% , 50% , 0.5);
        }
		

============================================================================================================================================================================================================
unidades

absolutos

px = pixel
cm =  centimetros
mm =  milimetros

viewports
Font


============================================================================================================================================================================================================

font 

font-size = tamenho da fonte

font-family: monospace , serif; = formato da fonta

font-style: italic; estilo da fonte

font-weight: bold; tipo de negrito pode colocar valores de 100 a 900 para representar a intencidade

text-transform: uppercase; ytansforma o texto de acordo com o parametro

text-decoration: overline ; tipo de sublinhado

word-spacing: 10px; coloca espaço entre as palavras 

letter-spacing: 10px;  coloca espaço entre as letras das palavras 

line-height: 2em; alturas das linhas

text-align: center;  alinha o texto

============================================================================================================================================================================================================
posição - position

/*dependedo das tags apis e filhas em relação as posições quando as posições são aplicadas no pai e filho*/

 position: absolute; /* pode ser colocado em qualquer local da pagina indepebdente*/
 
 position: static;   /**/
 
 position: fixed;    /* pode ser colocado em qualquer local da pagina e fica fixo quando rolado o scroll*/
 
 position: relative; /* fica em relação a outro elemento*/
 
 position: sticky;   /*  */

============================================================================================================================================================================================================


media query

div {
            font-size: 40px;
            margin: 20px;
            padding: 20px;
            background-color: coral;
            border: solid 5px;
            display: none;
        }

@media (max-width: 600px) {
    .muito-pequeno{display: block}

}  
        @media (max-width: 500px), (orientation: portrait) {
           .pequeno-retrato{display: block}
        }
        @media (min-width: 500px) and (max-width: 1000px) {
            .intervalo{display: block}
        }
		
============================================================================================================================================================================================================

display: block /* e impresso em sua propria linha um abaixo do outro  */

============================================================================================================================================================================================================
display: inline /*impresso um do lado do outro todos na mesma linha */

considerado
padding
margim
altira e largura serao iginorados

============================================================================================================================================================================================================

display: inline-block

considerado
padding
margim
altira e largura

============================================================================================================================================================================================================
flex-box


display: flex;

flex-direction: column; /*direção coluna*/

flex-direction: column-reverse; /*direção reversa*/

flex-direction: row; /*direção linha*/

flex-direction: column-reverse; /*direção reversa*/

flex-wrap: wrap; /*quebra a linha no limeite*/

flex-wrap: wrap-reverse; /*quebra a linha no limeite reberso*/

flex-flow: column-reverse wrap; /*quebra em varias colunas*/

flex-flow: row wrap; /*quebra em varias linhas*/



justify-content: flex-start; /*justifica as esquerda inicio da linha*/

justify-content: flex-end; /*justufuca a direita fim da linha*/

justify-content: center; /*justifica no centro*/

justify-content: space-around; /*divide os elemento em spaçoes iguais*/

justify-content: space-between; /*coloca espaços no meio*/

/*Cross axis*/

align-items: stretch;

align-items: baseline;  /*alinha pela base do item*/

align-items: flex-start;/* alinha por cima */

align-items: flex-end; /* alinha por baixo*/

align-items: center;/* alinha pelo centro*/

/*mais de uma linha*/

align-content: flex-end; /*os parametro de alinhamento são iguais as do justify-content */

order: 1; /*por padrão todos tem ordem 0 se colocar uma ordem mair  o mesmo passa para o ultimo*/

order: 0;

order: -1; /*pode ser negativa*/

flex-grow: 0; /*olhar aula 218*/

flex-shrink: 1; /*olhar aula 218*/


============================================================================================================================================================================================================



grid

body{
    display: grid;
    /*Clounas*/
    grid-template-columns:  50% 50%; /*de acordo com a  quandtidade de valores sera a quantiidade de coluneas*/
    grid-template-columns: repeat(4 , 8.33% 8.33% 8.33%); /*o repeate no primeiro parametro mestra quantas veses ira repitir e no segundo parametro sera a quantidade de veses que de prametres um multiplica por outro*/
    grid-template-columns: repeat(12 , 8.33% );
    grid-template-columns: repeat(11 , 100px) 100px; /*fora do repeate ainda posso passar mais parametros*/
    grid-template-columns: 200px 20% 1fr; /* 1fr e um fragmento o memso pode calular o tamando total da grid e passar dividr pela quantidade de colunas e trara o tamnaho */
    grid-template-columns: 3fr 6fr 3fr;
grid-template-columns: minmax(100px , 300px); /*tamenho minimo e tamnelho maximo*/
    /*Linhas*/

    grid-template-rows: 50% 25% 12.5%;  /*de acordo com a  quandtidade de valores sera a quantiidade de linhas*/
    grid-template-rows: 100px 1fr 150px;
    grid-template-rows: 100px auto; /*o auto ja divide o restante das linhas e alinha as grid ate o fim*/
}
        .d8{
            grid-column-start: 2; /*inicia na segunda coluna*/
            grid-column-end: 4;  /*finalza na quarta coluna*/
            grid-column-end: span 2;  /*o spam + numero representa que apartir do inicio ia prencher mais 2 coluna  */
            grid-row-start: 3;  /*inicia na terceira linha*/
            grid-row-end: 5; /*finalza na quinta lina*/
            grid-row-end: span 2;  /*o spam + numero representa que apartir do inicio ia prencher mais 2 coluna  */


        }

        .d10 , .d11 {
            /*pode sobrepor*/
            grid-column-start: 1;
            grid-column-end: 3;
            grid-row-start: 5;
            grid-row-end: span 3;

        }

        .d10{
            z-index: 10; /* o  z-index: representa os pesos da celula isso pode ressentar a preoridade das celuar quando as mesmas se sobrepoem */
            z-index: -1;
            z-index: -1;
        }
		
		
		
		
		
		
		
		
		
		
		
        /*Nomes da grid*/
        body{
            display: grid;
            grid-template-columns: [inicio]1fr  [metade-1 muio-1]1fr
            [meio-2 metade-2] 1fr [fim]; /*e possivel dar nome nas linhas e colunas e pode dar mais de um nome*/
            grid-template-rows: repeat(3 , 1fr);
            grid-column-gap: 20px; /* da o espacamento entre as colunas*/
            grid-row-gap: 10px ; /* da o espacamento entre as linhas e colunas todos com o mesmo valor*/
            grid-gap: 10px 20px; /*espaçoes entre a linha e a coluna nesta ordem linha coluna*/
            
        }
        .d1{
            grid-column-start: metade-2; /*e possivel movimentar as posições de acordo co os nomes */
            grid-column-end: fim;
            grid-column: inicio / fim;
            /*row-start column-start  row-end column-end*/
            grid-area: 1/ meio-1 / span 3 / meio-2 ; /*consigo colocar o inicio e o fime da linha e coluna de uma vez*/

        }
		
		
		
		
		
		
		/*forma mais didatica */
		
		  header{
            grid-area: cabecalho; /* da o nome do lemento  que ira compor a grid*/
        }
        nav{
            grid-area: navegacao;
        }
        main{
            grid-area: conteudo;
        }
        footer{
            grid-area: roda-pe;
        }

        body{
            display: grid;
            height: 100vh;
            grid-template-columns: 300px 1fr ;
            grid-template-rows: 100px 1fr 100px;
            grid-template-areas:  /* depois de colocar os valores de lihas e colunas podemoas adicionar onde irar cadas nome dos tamplates */
                    "cabecalho cabecalho"
                    "navegacao conteudo"
                    " roda-pe roda-pe" ;
        }
		

=====================================================================================================================================================================================================================

border-box

box-size: constent-box /* permite que elemento ultrapasse o elemento pai

acaba estrapolando por causa do padding masi a margim e a border

*/


box-size: border-box /* obedece o tamanho do elemento ja considerando a borda do elemento e a padding masi a margim e a border
somando todos eles para dar o tamano especificado.

como ele naão passa por padrão po herança
para colocar em todo o codigo usar o seletor universal
*{

}



*/
		
		
		
		
		
		
		